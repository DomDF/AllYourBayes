{"title":"Player Form. Part 1","markdown":{"yaml":{"title":"Player Form. Part 1","subtitle":"An Overview","author":"Domenic Di Francesco","date":"2022-01-19","categories":["football","analysis","Stan","uncertainty","Bayes","gaussian process"],"image":"plot.png","citation":true},"headingText":"TLDR","containsRefs":false,"markdown":"\n\n```{r}\n#| echo: false\n#| warning: false\n#| message: false\n\nknitr::opts_chunk$set(collapse = TRUE)\n\nlibrary(extrafont); library(tidyverse); library(StatsBombR)\n\n\n```\n\n```{r}\n#| echo: false\n#| message: false\n#| warning: false\n\nlibrary(extrafont); library(tidyverse); library(DomDF)\n\nlibrary(magick)\nSB_logo <- magick::image_read(path = \"SB_logo.png\")\n\ndelta_xG_plot <- function(matchday_df, label_delta = 1/5, \n                          date_lab_underp = '2019.12.01', y_lab_underp = -0.3, \n                          date_lab_overp = '2020.01.01', y_lab_overp = 2){\n  \n  ggplot(data = matchday_df, mapping = aes(x = match_date, y = delta_xg))+\n    geom_point(mapping = aes(shape = location), size = 2, alpha = 3/4)+\n    scale_shape_manual(values = c(1, 2))+\n    ggrepel::geom_text_repel(mapping = aes(label = opponent),\n                             family = 'Atkinson Hyperlegible', size = 3)+\n    geom_hline(yintercept = 0, lty = 2, alpha = 1/2)+\n    geom_segment(mapping = aes(x = lubridate::ymd(date_lab_overp), y = 0, \n                               xend = lubridate::ymd(date_lab_overp), yend = y_lab_overp), \n                 col = 'forestgreen',\n                 arrow = arrow(length = unit(0.25, 'cm')))+\n    geom_text(mapping = aes(x = lubridate::ymd(date_lab_overp), y = y_lab_overp + label_delta, \n                            label = 'Over-performing vs. xG'), \n              col = 'forestgreen', family = 'Atkinson Hyperlegible', size = 4)+\n    geom_segment(mapping = aes(x = lubridate::ymd(date_lab_underp), y = 0, \n                               xend = lubridate::ymd(date_lab_underp), yend = y_lab_underp), \n                 col = 'firebrick',\n                 arrow = arrow(length = unit(0.25, 'cm')))+\n    geom_text(mapping = aes(x = lubridate::ymd(date_lab_underp), y = y_lab_underp - label_delta, \n                            label = 'Under-performing vs. xG'), \n              col = 'firebrick', family = 'Atkinson Hyperlegible', size = 4)+\n    scale_x_date(breaks = scales::date_breaks(width = 'month'))+\n    DomDF::theme_ddf_light(base_family = 'Atkinson Hyperlegible', base_size = 12)+\n    labs(subtitle = 'Vivianne Miedema (Arsenal), 2019-20 WSL Season', \n         x = 'Date', \n         y = 'Goals scored minus cumulative matchday xG',\n         caption = '@Domenic_DF  |  Data from StatsBomb')\n  \n}\n\n```\n\n\nWhen is a player **in form** (over performing, or enjoying a hot streak) and how long does this last? If there is such an effect, I suspect it will be a result of some complicated system of personal circumstances. In this post I suggest a popular statistical model (Gaussian process) for approximating the dependencies (how many games back should we look?) and non-linearities (rise and fall of form) that we need. Again, I am suggesting that we should care about uncertainty when trying to model just about anything in football, and using probability is a helpful way of doing so. \n\nEllen White's data from the 2019-20 WSL season (courtesy of StatsBomb) is used as an example.\n\nSimilarly to the [posts on multi-level models](https://allyourbayes.com/posts/xg_pt2/), this will also be split into 2 parts. Part 1 (here) will focus on the features of a Gaussian process that are well suited to approximating player form. Part 2 (in preparation) will include more technical details and more code.\n\n---\n\n### A (Questionable) Measure of Player Form\n\nAs I alluded to in the TLDR above, I suspect a players form is somehow linked to their current mental state. When they are feeling confident they may be less likely to doubt their abilities, and more decisive. This could mean they act quicker and become more difficult to play against. \n\n![Confidence is key ...probably](https://media.giphy.com/media/STYcRDzNO6AYNmMgvA/giphy.gif)\n\nI will not propose a detailed causal model here, just a statistical proxy. But, I will be assuming that form can rise and decay over time. For some players even a single good or bad performance may be enough to drastically impact their next game, and for others this process may be smoother and less volatile. More on this later.\n\nFor the purposes of this post, goalscoring form on a given match day, $i$, is defined as the difference between the number of goals that were scored on that match day, minus the expected number of goals, $xG$ associated with the opportunities in that game.\n\n$$\nForm_{[i]} = Goals_{[i]} - xG_{[i]}\n$$\n\nA nice feature of this is that, in principle, it is invariant to the quality of opposition. A striker may have a higher xG when performing against a weaker team, but will therefore need to score more goals in such a game to be considered in the same form. By the same token, it should also account for the fact that a player will generally get fewer scoring opportunities as a substitute. \n\n...As for the not so nice features, there are plenty! For instance, what good is a measure of form that only considers goals scored? Is xG not also conditional on how well a striker is paying? Would it be more useful to standardise the result? \n\nThese are all fair questions, and with a little thought could all be integrated into a more comprehensive characterisation. However, the type of model that I will introduce will be equally compatible with alternative definitions, so let's imagine we just care about whether a striker is scoring as many goals as they should be, and whether this will continue.\n\n### Ellen White\n\nEllen White is a clinical striker who, at the time of writing this, plays for Manchester City and England. She is a former winner of the Women's Super League (WSL) golden boot, and is England's all-time top scorer. So plenty of opportunities to see her distinctive celebration:\n\n![Ellen's goal goggles](https://media.giphy.com/media/SVlBW8O5jw3dtU17dv/giphy-downsized-large.gif)\n\nStatsBomb have kindly made data from the WSL (2019/20 season) freely available in [their R package](https://github.com/statsbomb/StatsBombR), and so we will consider this league season of Ellen White's career here.\n\n```{r}\n#| echo: false\n#| output: false\n#| warning: false\n#| include: false\n\nWSL_1920 <- StatsBombR::FreeCompetitions() |> \n  dplyr::filter(competition_name == \"FA Women's Super League\" &\n                season_name == '2019/2020') \n\nEW_team <- 'Manchester City WFC'\n\nMCWFC_1920_matches <- StatsBombR::FreeMatches(Competitions = WSL_1920) |> \n  dplyr::filter(home_team.home_team_name == EW_team |\n                  away_team.away_team_name == EW_team) \n\nEW_1920 <- StatsBombR::free_allevents(MatchesDF = MCWFC_1920_matches, Parallel = F) |>\n  StatsBombR::allclean() |> \n  dplyr::filter(player.name == 'Ellen White')\n\nget_matchday_df <- function(player_df, matches_df){\n  \n  matchday_df <- tibble(match_id = double(), match_date = character(), location = character(), \n                        opponent = character(), match_xg = double(), goals = double())\n  \n  for(id in player_df$match_id |> unique()){\n    \n    if((matches_df |> \n        dplyr::filter(match_id == id))$home_team.home_team_name == (player_df$team.name |> \n                                                                    unique())){\n      location <- 'Home'\n      opponent <- (matches_df |> \n                     dplyr::filter(match_id == id))$away_team.away_team_name\n    } else {\n      location <- 'Away'\n      opponent <- (matches_df |> \n                     dplyr::filter(match_id == id))$home_team.home_team_name\n    }\n    \n    xg_df <- StatsBombR::free_allevents(MatchesDF = matches_df |>\n                                               dplyr::filter(match_id == id),\n                                             Parallel = F) |>\n      StatsBombR::allclean() |>\n      dplyr::filter(player.name == (player_df$player.name |> unique()) & \n                      type.name == 'Shot')\n    \n    goals <- (xg_df |>\n                group_by(shot.outcome.name) |>\n                tally() |>\n                ungroup() |> \n                dplyr::filter(shot.outcome.name == 'Goal'))$n\n    \n    if(length(goals) == 0){\n      goals <- (1-1)\n    } else {\n      goals <- goals\n    }\n    \n    matchday_df <- rbind(matchday_df, \n                         tibble(match_id = id,\n                                match_date = (matches_df |>\n                                                dplyr::filter(match_id == id))$match_date,\n                                location = location,\n                                opponent = opponent,\n                                match_xg = (xg_df |>\n                                              summarise(match_xg = sum(shot.statsbomb_xg)))$match_xg,\n                                goals)\n    )\n    \n  }\n  \n  matchday_df <- matchday_df |> \n    mutate(match_date = lubridate::as_date(x = match_date)) |> \n    arrange(match_date)\n  \n  return(matchday_df |> \n           mutate(days = lubridate::interval(start = matchday_df$match_date |> min(), \n                                             end = match_date) %/% lubridate::days(1),\n                  delta_xg = goals - match_xg))\n  \n}\n\nEW_1920_matchday_df <- get_matchday_df(player_df = EW_1920, matches_df = MCWFC_1920_matches)\n\n```\n\nHere is a plot of Ellen's **form** (performance vs. xG) over the 12 league games that she featured in, during that season. Her biggest over performance vs. xG was when she scored in a [4-1 win away at Tottenham](https://womenscompetitions.thefa.com/Article/TottenhamManCity05012020) despite a cumulative xG of `r (EW_1920_matchday_df |> filter(opponent == 'Tottenham Hotspur Women'))$match_xg |> signif(digits = 3)`. Her worst performance by the same measure was the following week, failing to score in the [3-1 win at home to Everton](https://womenscompetitions.thefa.com/Article/Manchester-City-3-1-Everton-110120). Although she only played the final $25$ minutes of this game, she accrued a match xG of `r (EW_1920_matchday_df |> filter(opponent == 'Everton LFC'))$match_xg |> signif(digits = 3)`. The fact that these games were back to back could be tricky for a form model to accommodate!\n\n```{r}\n#| echo: false\n#| message: false\n#| warning: false\n\nEW_formplot <- delta_xG_plot(matchday_df = EW_1920_matchday_df, label_delta = 1/20, \n                             date_lab_underp = '2019.11.15', y_lab_underp = -1/4,\n                             date_lab_overp = '2020.01.15', y_lab_overp = 1/4)+\n  labs(subtitle = 'Ellen White (Man City), 2019-20 WSL Season')\n\nEW_formplot\ngrid::grid.raster(image = SB_logo, x = 1/10, y = 1/50, just = c('left', 'bottom'), width = unit(1/4, 'inches'))\n\n```\n\n### What would such a model need to do?\n\nEssentially, we are looking for are some numbers to help us understand the following:\n\n * What form is a player currently in?\n * How long will a player remain in good (or bad) form?\n * What is the uncertainty in our predictions?\n \nSince players can enter good and bad patches of form over the course of a season, we need a model that is able to twist and turn accordingly. This means we need some *non-linearity*. \n\nWe also want future predictions to be based on recent games - if a player has over performed for the last 3 games in a row, then we generally expect them to continue on this path, at least in the short-term. But how far back should we look? Does a single great performance from $3$ months ago have any impact on a players current form? We need to quantify this *dependency* in our model too.\n\nFinally, a probabilistic model has the benefit of *quantifying uncertainty*. I emphasise the importance of this in the 'final thoughts' at the end of this post and for anyone interested, here is [more Bayesian statistics propaganda](https://www.allyourbayes.com/post/2020-03-24-why-go-bayesian/). But, in summary we should not neglect uncertainty in this model because (a) We are not even sure what form is, and (b) we are estimating it from a small amount of indirect observations. So let's not pretend we will end up with a single number. Enough preaching and back to the task at hand....\n\nOne solution that checks the above requirements is the Gaussian Process (GP).\n\n### What does it look like? \n\nSo we have this probabilistic model of smooth, non-linear functions. Let's see what it looks like. In the below plot, the match days are the same as those presented in the above plot, we just have a new y-axis scale, and we have 'days' (rather than date) along the x-axis.\n\nThere are multiple functions that are consistent with Ellen White's form in the league that season, so let's look at one example first:\n\n```{r}\n#| echo: false\n#| message: false\n#| warning: false\n#| output: false\n\ndays_forecast <- 10; n_pp <- max(EW_1920_matchday_df$days) + days_forecast + 1\n\nalpha_params <- DomDF::lnorm_params(norm_mean = 3, norm_sd = 1) # 3, 1\nrho_params <- DomDF::lnorm_params(norm_mean = 10, norm_sd = 2) # 8, 2\n\nform_model_data <- list(n_matches = nrow(EW_1920_matchday_df), \n                        season_days_fit = EW_1920_matchday_df$days,\n                        delta_xg_fit = EW_1920_matchday_df$delta_xg,\n                        n_pred = n_pp,\n                        season_days_pred = seq(from = 0,\n                                               to = max(EW_1920_matchday_df$days) + days_forecast,\n                                               length.out = n_pp),\n                        mu_rho = rho_params$meanlog, sigma_rho = rho_params$sdlog, \n                        mu_alpha = alpha_params$meanlog, sigma_alpha = alpha_params$sdlog, \n                        sigma_rate = 3)\n\nn_chains <- 4; n_warmup <- 4e3; n_draws <- 1e3; thinning <- 1\n\ngp_form_model <- cmdstanr::cmdstan_model(stan_file = 'player_form_cf.stan')\n\ngp_form_fit <- gp_form_model$sample(data = form_model_data, seed = 2408,\n                                    chains = n_chains, parallel_chains = parallel::detectCores(),\n                                    iter_warmup = n_warmup, iter_sampling = n_draws, thin = thinning,\n                                    adapt_delta = 0.99, max_treedepth = 30)\n\nform_params <- gp_form_fit$metadata()$model_params\n# params_to_extract <- form_params[!grepl(x = form_params, pattern = 'K.|lp__|eta')]\n# gp_form_samples <- DomDF::tidy_mcmc_draws(cmdstan_fit = gp_form_fit, params = 'rho')\n\nid <- c(seq(from = 1, to = form_model_data$n_pred, by = 1))\nf_pp_params <- purrr::map_chr(.x = id, .f = function(x) paste0('f_pred[', x, ']'))\n\nf_draws <- DomDF::tidy_mcmc_draws(cmdstan_fit = gp_form_fit, \n                                  params = f_pp_params) |> \n  mutate(days = rep(x = seq(from = 0, \n                            to = max(form_model_data$season_days_pred), \n                            length.out = n_pp), \n                    each = n_draws * n_chains))\n\npost_pred_GP_df <- DomDF::tidy_mcmc_draws(cmdstan_fit = gp_form_fit, params = 'delta_xg_pred') |> \n  dplyr::filter(grepl(pattern = 'delta_xg_pred', x = Parameter)) |> \n  mutate(days = rep(x = seq(from = 0, to = max(form_model_data$season_days_pred), length.out = form_model_data$n_pred), \n                    each = n_chains * n_draws))\n\n```\n\n```{r}\n#| echo: false\n#| message: false\n#| warning: false\n\nEW_GP_sample <- ggplot(data = f_draws |>\n                         dplyr::filter(Iteration %% 504 == 0, Chain == 3))+\n  geom_line(alpha = 1/4,\n            mapping = aes(x = days, y = value, group = Iteration,\n                          linetype = 'One sample from Gaussian process'))+\n  scale_shape_manual(values = c(21))+\n  geom_hline(yintercept = 0, lty = 2, alpha = 1/2)+\n  geom_point(data = EW_1920_matchday_df, \n             mapping = aes(x = days, y = delta_xg, shape = 'Match days'), fill = 'orange', size = 5/2)+\n  scale_x_continuous(name = 'Time through season (days)', breaks = seq(from = 0, to = 120, by = 20))+\n  scale_y_continuous(name = 'Goals scored minus total matchday xG', limits = c(-2, 2), breaks = seq(from = -2, to = 2, by = 1))+\n  labs(subtitle = 'Ellen White (Manchester City), 2019-20 WSL Season', \n       caption = '@Domenic_DF  |  Data from StatsBomb', \n       shape = 'Matchdays')+\n  DomDF::theme_ddf_light(base_family = 'Atkinson Hyperlegible', base_size = 12)\n\nEW_GP_sample\n# grid::grid.raster(image = SB_logo, x = 1/8, y = 1/50, just = c('left', 'bottom'), width = unit(1, 'inches'))\n\n```\nWhere there is a large gap between successive games (such as the 3 weeks between White's first and second appearances of the season), there is less evidence to guide predictions of form. This is also true for the period around day 60 (late December). Here though, she was on an upward trajectory. In both cases, this lack of data results in higher uncertainty, as is apparent when we look at more samples, which are shown on top of the full predictive distribution below.\n\n```{r}\n#| echo: false\n#| message: false\n#| warning: false\n\nEW_full_GP <- ggplot(data = post_pred_GP_df)+\n  stat_density_2d(geom = 'raster', contour = FALSE, n = 200,\n                  mapping = aes(x = days, y = value, fill = after_stat(x = density)))+\n  scale_fill_viridis_c()+\n  geom_hline(yintercept = 0, lty = 2, alpha = 1/2)+\n  geom_point(data = EW_1920_matchday_df, \n             mapping = aes(x = days, y = delta_xg, shape = 'Match days'), fill = 'white', size = 5/2)+\n  scale_shape_manual(values = c(21))+\n  geom_line(data = f_draws |>\n              dplyr::filter(Iteration %% 200 == 0, Chain == 3),\n            alpha = 1/4, col = 'white',\n            mapping = aes(x = days, y = value, group = Iteration))+\n  scale_x_continuous(name = 'Time through season (days)', breaks = seq(from = 0, to = 120, by = 20))+\n  scale_y_continuous(name = 'Goals scored minus total matchday xG', limits = c(-2, 2), \n                     breaks = seq(from = -2, to  = 2, by = 1))+\n  DomDF::theme_ddf_light(base_family = 'Atkinson Hyperlegible', base_size = 12)+\n  theme(legend.position = 'top', legend.title = element_text())+\n  labs(fill = 'Likelihood', shape ='')+\n  labs(subtitle = 'Ellen White (Manchester City), 2019-20 WSL Season', \n       caption = '@Domenic_DF  |  Data from StatsBomb')+\n  guides(fill = guide_colourbar(barwidth = 10, title.position = 'left', order = 1))\n\nEW_full_GP\n# grid::grid.raster(image = SB_logo, x = 1/8, y = 1/50, just = c('left', 'bottom'), width = unit(1, 'inches'))\n\n```\n\n### And, so what?\n\nSome squiggly lines that approximately go through some points? What is the value of this when you could scribble something similar without knowing anything about statistics?\n\nWell, underlying all of these lines is a model of dependency. We have quantified how similar (correlated) form should be in successive games, and how this correlation will decrease with time. I will talk about the parameters that do this and how they can be interpreted in part 2 (in preparation), but to summarise, the model quantifies how correlation in form decreases as time progresses and this can be seen in the smoothness of the lines. \n\nFor example, if form was always shown to be very similar to that of the previous game, then transitioning from good to bad performances would be gradual, and the samples from the associated GP model would be very smooth. Conversely, in the case where performance in subsequent games were completely independent, even if very little time had passed, the GP regression lines would need to be able to change direction very sharply.\n\nBelow are some predictions from the model in the period just after White's last game of the season (to the right of the final match day on the above plots). She appeared to be on a slight upward trend at this point, over performing in her final game at home to Chelsea. This is shown in the uppermost histogram. As we move away from this game, into the off-season, we see the uncertainty gradually increase in our predictions and the average move towards zero. This is consistent with the considerations discussed above.\n\n```{r}\n#| echo: false\n#| message: false\n#| warning: false\n\nEW_forecast <- ggplot(data = post_pred_GP_df |> \n                        mutate(delta_days = floor(days) - 119, \n                               delta_label = paste(delta_days, 'days after final league game')) |>\n                        dplyr::filter(delta_days == 0 | delta_days == 2 | delta_days == 4),\n       mapping = aes(x = value, y = after_stat(x = density)))+\n  geom_histogram(col = 'black', alpha = 1/4)+\n  facet_wrap(facets = ~delta_label, ncol = 1)+\n  geom_vline(xintercept = 0, lty = 2, alpha = 1/2)+\n  scale_x_continuous(name = 'Goals scored minus total matchday xG', limits = c(-5/2, 5/2))+\n  scale_y_continuous(name = 'Likelihood')+\n  DomDF::theme_ddf_light(base_family = 'Atkinson Hyperlegible', base_size = 12)+\n  labs(subtitle = 'Forecast Form of Ellen White', \n       caption = '@Domenic_DF  |  Data from StatsBomb')\n\nEW_forecast\n# grid::grid.raster(image = SB_logo, x = 1/8, y = 1/50, just = c('left', 'bottom'), width = unit(1, 'inches'))\n\n```\n\n### Some final thoughts...\n\n#### Uncertainty\n\nAny football models we propose will only vaguely resemble the 'true' data generating process and though we can incrementally add more parameters we do not automatically find more evidence for them. We can build big datasets by combining observations from multiple players, and leagues, but ignoring possible variation between such data is misleading. If your big football models need big data, why stop there? Feed it some Sunday league football, or some basketball, or some handwritten digits. \n\nAlternatively, we acknowledge that our system of parameters are not perfectly precise, and our predictions will span credible ranges. Quantifying this variability is a strength, not a weakness of our models, and is actually of more direct use in decision support.\n\n![Yes we can!](https://media.giphy.com/media/3otPoyudZ18xASX0rK/giphy.gif)\n\n#### Sources of Information\n\nWhat can we do about long periods in time where no competitive games are taking place?\n\nThere may be other sources of information that could help, such as performances in other competitions or even in training. Given we are not sure of the extent that these should inform the model, there is an argument to use a multi-level (partial pooling) structure, as was used to improve [player-specifc xG estimates](https://allyourbayes.com/posts/xg_pt2/).\n\nFinally, the other source of information is that contained in the priors, which I have not included here. But don't panic, some prior predictive sampling is on the way in part 2 (in preparation).","srcMarkdownNoYaml":"\n\n```{r}\n#| echo: false\n#| warning: false\n#| message: false\n\nknitr::opts_chunk$set(collapse = TRUE)\n\nlibrary(extrafont); library(tidyverse); library(StatsBombR)\n\n\n```\n\n```{r}\n#| echo: false\n#| message: false\n#| warning: false\n\nlibrary(extrafont); library(tidyverse); library(DomDF)\n\nlibrary(magick)\nSB_logo <- magick::image_read(path = \"SB_logo.png\")\n\ndelta_xG_plot <- function(matchday_df, label_delta = 1/5, \n                          date_lab_underp = '2019.12.01', y_lab_underp = -0.3, \n                          date_lab_overp = '2020.01.01', y_lab_overp = 2){\n  \n  ggplot(data = matchday_df, mapping = aes(x = match_date, y = delta_xg))+\n    geom_point(mapping = aes(shape = location), size = 2, alpha = 3/4)+\n    scale_shape_manual(values = c(1, 2))+\n    ggrepel::geom_text_repel(mapping = aes(label = opponent),\n                             family = 'Atkinson Hyperlegible', size = 3)+\n    geom_hline(yintercept = 0, lty = 2, alpha = 1/2)+\n    geom_segment(mapping = aes(x = lubridate::ymd(date_lab_overp), y = 0, \n                               xend = lubridate::ymd(date_lab_overp), yend = y_lab_overp), \n                 col = 'forestgreen',\n                 arrow = arrow(length = unit(0.25, 'cm')))+\n    geom_text(mapping = aes(x = lubridate::ymd(date_lab_overp), y = y_lab_overp + label_delta, \n                            label = 'Over-performing vs. xG'), \n              col = 'forestgreen', family = 'Atkinson Hyperlegible', size = 4)+\n    geom_segment(mapping = aes(x = lubridate::ymd(date_lab_underp), y = 0, \n                               xend = lubridate::ymd(date_lab_underp), yend = y_lab_underp), \n                 col = 'firebrick',\n                 arrow = arrow(length = unit(0.25, 'cm')))+\n    geom_text(mapping = aes(x = lubridate::ymd(date_lab_underp), y = y_lab_underp - label_delta, \n                            label = 'Under-performing vs. xG'), \n              col = 'firebrick', family = 'Atkinson Hyperlegible', size = 4)+\n    scale_x_date(breaks = scales::date_breaks(width = 'month'))+\n    DomDF::theme_ddf_light(base_family = 'Atkinson Hyperlegible', base_size = 12)+\n    labs(subtitle = 'Vivianne Miedema (Arsenal), 2019-20 WSL Season', \n         x = 'Date', \n         y = 'Goals scored minus cumulative matchday xG',\n         caption = '@Domenic_DF  |  Data from StatsBomb')\n  \n}\n\n```\n\n### TLDR\n\nWhen is a player **in form** (over performing, or enjoying a hot streak) and how long does this last? If there is such an effect, I suspect it will be a result of some complicated system of personal circumstances. In this post I suggest a popular statistical model (Gaussian process) for approximating the dependencies (how many games back should we look?) and non-linearities (rise and fall of form) that we need. Again, I am suggesting that we should care about uncertainty when trying to model just about anything in football, and using probability is a helpful way of doing so. \n\nEllen White's data from the 2019-20 WSL season (courtesy of StatsBomb) is used as an example.\n\nSimilarly to the [posts on multi-level models](https://allyourbayes.com/posts/xg_pt2/), this will also be split into 2 parts. Part 1 (here) will focus on the features of a Gaussian process that are well suited to approximating player form. Part 2 (in preparation) will include more technical details and more code.\n\n---\n\n### A (Questionable) Measure of Player Form\n\nAs I alluded to in the TLDR above, I suspect a players form is somehow linked to their current mental state. When they are feeling confident they may be less likely to doubt their abilities, and more decisive. This could mean they act quicker and become more difficult to play against. \n\n![Confidence is key ...probably](https://media.giphy.com/media/STYcRDzNO6AYNmMgvA/giphy.gif)\n\nI will not propose a detailed causal model here, just a statistical proxy. But, I will be assuming that form can rise and decay over time. For some players even a single good or bad performance may be enough to drastically impact their next game, and for others this process may be smoother and less volatile. More on this later.\n\nFor the purposes of this post, goalscoring form on a given match day, $i$, is defined as the difference between the number of goals that were scored on that match day, minus the expected number of goals, $xG$ associated with the opportunities in that game.\n\n$$\nForm_{[i]} = Goals_{[i]} - xG_{[i]}\n$$\n\nA nice feature of this is that, in principle, it is invariant to the quality of opposition. A striker may have a higher xG when performing against a weaker team, but will therefore need to score more goals in such a game to be considered in the same form. By the same token, it should also account for the fact that a player will generally get fewer scoring opportunities as a substitute. \n\n...As for the not so nice features, there are plenty! For instance, what good is a measure of form that only considers goals scored? Is xG not also conditional on how well a striker is paying? Would it be more useful to standardise the result? \n\nThese are all fair questions, and with a little thought could all be integrated into a more comprehensive characterisation. However, the type of model that I will introduce will be equally compatible with alternative definitions, so let's imagine we just care about whether a striker is scoring as many goals as they should be, and whether this will continue.\n\n### Ellen White\n\nEllen White is a clinical striker who, at the time of writing this, plays for Manchester City and England. She is a former winner of the Women's Super League (WSL) golden boot, and is England's all-time top scorer. So plenty of opportunities to see her distinctive celebration:\n\n![Ellen's goal goggles](https://media.giphy.com/media/SVlBW8O5jw3dtU17dv/giphy-downsized-large.gif)\n\nStatsBomb have kindly made data from the WSL (2019/20 season) freely available in [their R package](https://github.com/statsbomb/StatsBombR), and so we will consider this league season of Ellen White's career here.\n\n```{r}\n#| echo: false\n#| output: false\n#| warning: false\n#| include: false\n\nWSL_1920 <- StatsBombR::FreeCompetitions() |> \n  dplyr::filter(competition_name == \"FA Women's Super League\" &\n                season_name == '2019/2020') \n\nEW_team <- 'Manchester City WFC'\n\nMCWFC_1920_matches <- StatsBombR::FreeMatches(Competitions = WSL_1920) |> \n  dplyr::filter(home_team.home_team_name == EW_team |\n                  away_team.away_team_name == EW_team) \n\nEW_1920 <- StatsBombR::free_allevents(MatchesDF = MCWFC_1920_matches, Parallel = F) |>\n  StatsBombR::allclean() |> \n  dplyr::filter(player.name == 'Ellen White')\n\nget_matchday_df <- function(player_df, matches_df){\n  \n  matchday_df <- tibble(match_id = double(), match_date = character(), location = character(), \n                        opponent = character(), match_xg = double(), goals = double())\n  \n  for(id in player_df$match_id |> unique()){\n    \n    if((matches_df |> \n        dplyr::filter(match_id == id))$home_team.home_team_name == (player_df$team.name |> \n                                                                    unique())){\n      location <- 'Home'\n      opponent <- (matches_df |> \n                     dplyr::filter(match_id == id))$away_team.away_team_name\n    } else {\n      location <- 'Away'\n      opponent <- (matches_df |> \n                     dplyr::filter(match_id == id))$home_team.home_team_name\n    }\n    \n    xg_df <- StatsBombR::free_allevents(MatchesDF = matches_df |>\n                                               dplyr::filter(match_id == id),\n                                             Parallel = F) |>\n      StatsBombR::allclean() |>\n      dplyr::filter(player.name == (player_df$player.name |> unique()) & \n                      type.name == 'Shot')\n    \n    goals <- (xg_df |>\n                group_by(shot.outcome.name) |>\n                tally() |>\n                ungroup() |> \n                dplyr::filter(shot.outcome.name == 'Goal'))$n\n    \n    if(length(goals) == 0){\n      goals <- (1-1)\n    } else {\n      goals <- goals\n    }\n    \n    matchday_df <- rbind(matchday_df, \n                         tibble(match_id = id,\n                                match_date = (matches_df |>\n                                                dplyr::filter(match_id == id))$match_date,\n                                location = location,\n                                opponent = opponent,\n                                match_xg = (xg_df |>\n                                              summarise(match_xg = sum(shot.statsbomb_xg)))$match_xg,\n                                goals)\n    )\n    \n  }\n  \n  matchday_df <- matchday_df |> \n    mutate(match_date = lubridate::as_date(x = match_date)) |> \n    arrange(match_date)\n  \n  return(matchday_df |> \n           mutate(days = lubridate::interval(start = matchday_df$match_date |> min(), \n                                             end = match_date) %/% lubridate::days(1),\n                  delta_xg = goals - match_xg))\n  \n}\n\nEW_1920_matchday_df <- get_matchday_df(player_df = EW_1920, matches_df = MCWFC_1920_matches)\n\n```\n\nHere is a plot of Ellen's **form** (performance vs. xG) over the 12 league games that she featured in, during that season. Her biggest over performance vs. xG was when she scored in a [4-1 win away at Tottenham](https://womenscompetitions.thefa.com/Article/TottenhamManCity05012020) despite a cumulative xG of `r (EW_1920_matchday_df |> filter(opponent == 'Tottenham Hotspur Women'))$match_xg |> signif(digits = 3)`. Her worst performance by the same measure was the following week, failing to score in the [3-1 win at home to Everton](https://womenscompetitions.thefa.com/Article/Manchester-City-3-1-Everton-110120). Although she only played the final $25$ minutes of this game, she accrued a match xG of `r (EW_1920_matchday_df |> filter(opponent == 'Everton LFC'))$match_xg |> signif(digits = 3)`. The fact that these games were back to back could be tricky for a form model to accommodate!\n\n```{r}\n#| echo: false\n#| message: false\n#| warning: false\n\nEW_formplot <- delta_xG_plot(matchday_df = EW_1920_matchday_df, label_delta = 1/20, \n                             date_lab_underp = '2019.11.15', y_lab_underp = -1/4,\n                             date_lab_overp = '2020.01.15', y_lab_overp = 1/4)+\n  labs(subtitle = 'Ellen White (Man City), 2019-20 WSL Season')\n\nEW_formplot\ngrid::grid.raster(image = SB_logo, x = 1/10, y = 1/50, just = c('left', 'bottom'), width = unit(1/4, 'inches'))\n\n```\n\n### What would such a model need to do?\n\nEssentially, we are looking for are some numbers to help us understand the following:\n\n * What form is a player currently in?\n * How long will a player remain in good (or bad) form?\n * What is the uncertainty in our predictions?\n \nSince players can enter good and bad patches of form over the course of a season, we need a model that is able to twist and turn accordingly. This means we need some *non-linearity*. \n\nWe also want future predictions to be based on recent games - if a player has over performed for the last 3 games in a row, then we generally expect them to continue on this path, at least in the short-term. But how far back should we look? Does a single great performance from $3$ months ago have any impact on a players current form? We need to quantify this *dependency* in our model too.\n\nFinally, a probabilistic model has the benefit of *quantifying uncertainty*. I emphasise the importance of this in the 'final thoughts' at the end of this post and for anyone interested, here is [more Bayesian statistics propaganda](https://www.allyourbayes.com/post/2020-03-24-why-go-bayesian/). But, in summary we should not neglect uncertainty in this model because (a) We are not even sure what form is, and (b) we are estimating it from a small amount of indirect observations. So let's not pretend we will end up with a single number. Enough preaching and back to the task at hand....\n\nOne solution that checks the above requirements is the Gaussian Process (GP).\n\n### What does it look like? \n\nSo we have this probabilistic model of smooth, non-linear functions. Let's see what it looks like. In the below plot, the match days are the same as those presented in the above plot, we just have a new y-axis scale, and we have 'days' (rather than date) along the x-axis.\n\nThere are multiple functions that are consistent with Ellen White's form in the league that season, so let's look at one example first:\n\n```{r}\n#| echo: false\n#| message: false\n#| warning: false\n#| output: false\n\ndays_forecast <- 10; n_pp <- max(EW_1920_matchday_df$days) + days_forecast + 1\n\nalpha_params <- DomDF::lnorm_params(norm_mean = 3, norm_sd = 1) # 3, 1\nrho_params <- DomDF::lnorm_params(norm_mean = 10, norm_sd = 2) # 8, 2\n\nform_model_data <- list(n_matches = nrow(EW_1920_matchday_df), \n                        season_days_fit = EW_1920_matchday_df$days,\n                        delta_xg_fit = EW_1920_matchday_df$delta_xg,\n                        n_pred = n_pp,\n                        season_days_pred = seq(from = 0,\n                                               to = max(EW_1920_matchday_df$days) + days_forecast,\n                                               length.out = n_pp),\n                        mu_rho = rho_params$meanlog, sigma_rho = rho_params$sdlog, \n                        mu_alpha = alpha_params$meanlog, sigma_alpha = alpha_params$sdlog, \n                        sigma_rate = 3)\n\nn_chains <- 4; n_warmup <- 4e3; n_draws <- 1e3; thinning <- 1\n\ngp_form_model <- cmdstanr::cmdstan_model(stan_file = 'player_form_cf.stan')\n\ngp_form_fit <- gp_form_model$sample(data = form_model_data, seed = 2408,\n                                    chains = n_chains, parallel_chains = parallel::detectCores(),\n                                    iter_warmup = n_warmup, iter_sampling = n_draws, thin = thinning,\n                                    adapt_delta = 0.99, max_treedepth = 30)\n\nform_params <- gp_form_fit$metadata()$model_params\n# params_to_extract <- form_params[!grepl(x = form_params, pattern = 'K.|lp__|eta')]\n# gp_form_samples <- DomDF::tidy_mcmc_draws(cmdstan_fit = gp_form_fit, params = 'rho')\n\nid <- c(seq(from = 1, to = form_model_data$n_pred, by = 1))\nf_pp_params <- purrr::map_chr(.x = id, .f = function(x) paste0('f_pred[', x, ']'))\n\nf_draws <- DomDF::tidy_mcmc_draws(cmdstan_fit = gp_form_fit, \n                                  params = f_pp_params) |> \n  mutate(days = rep(x = seq(from = 0, \n                            to = max(form_model_data$season_days_pred), \n                            length.out = n_pp), \n                    each = n_draws * n_chains))\n\npost_pred_GP_df <- DomDF::tidy_mcmc_draws(cmdstan_fit = gp_form_fit, params = 'delta_xg_pred') |> \n  dplyr::filter(grepl(pattern = 'delta_xg_pred', x = Parameter)) |> \n  mutate(days = rep(x = seq(from = 0, to = max(form_model_data$season_days_pred), length.out = form_model_data$n_pred), \n                    each = n_chains * n_draws))\n\n```\n\n```{r}\n#| echo: false\n#| message: false\n#| warning: false\n\nEW_GP_sample <- ggplot(data = f_draws |>\n                         dplyr::filter(Iteration %% 504 == 0, Chain == 3))+\n  geom_line(alpha = 1/4,\n            mapping = aes(x = days, y = value, group = Iteration,\n                          linetype = 'One sample from Gaussian process'))+\n  scale_shape_manual(values = c(21))+\n  geom_hline(yintercept = 0, lty = 2, alpha = 1/2)+\n  geom_point(data = EW_1920_matchday_df, \n             mapping = aes(x = days, y = delta_xg, shape = 'Match days'), fill = 'orange', size = 5/2)+\n  scale_x_continuous(name = 'Time through season (days)', breaks = seq(from = 0, to = 120, by = 20))+\n  scale_y_continuous(name = 'Goals scored minus total matchday xG', limits = c(-2, 2), breaks = seq(from = -2, to = 2, by = 1))+\n  labs(subtitle = 'Ellen White (Manchester City), 2019-20 WSL Season', \n       caption = '@Domenic_DF  |  Data from StatsBomb', \n       shape = 'Matchdays')+\n  DomDF::theme_ddf_light(base_family = 'Atkinson Hyperlegible', base_size = 12)\n\nEW_GP_sample\n# grid::grid.raster(image = SB_logo, x = 1/8, y = 1/50, just = c('left', 'bottom'), width = unit(1, 'inches'))\n\n```\nWhere there is a large gap between successive games (such as the 3 weeks between White's first and second appearances of the season), there is less evidence to guide predictions of form. This is also true for the period around day 60 (late December). Here though, she was on an upward trajectory. In both cases, this lack of data results in higher uncertainty, as is apparent when we look at more samples, which are shown on top of the full predictive distribution below.\n\n```{r}\n#| echo: false\n#| message: false\n#| warning: false\n\nEW_full_GP <- ggplot(data = post_pred_GP_df)+\n  stat_density_2d(geom = 'raster', contour = FALSE, n = 200,\n                  mapping = aes(x = days, y = value, fill = after_stat(x = density)))+\n  scale_fill_viridis_c()+\n  geom_hline(yintercept = 0, lty = 2, alpha = 1/2)+\n  geom_point(data = EW_1920_matchday_df, \n             mapping = aes(x = days, y = delta_xg, shape = 'Match days'), fill = 'white', size = 5/2)+\n  scale_shape_manual(values = c(21))+\n  geom_line(data = f_draws |>\n              dplyr::filter(Iteration %% 200 == 0, Chain == 3),\n            alpha = 1/4, col = 'white',\n            mapping = aes(x = days, y = value, group = Iteration))+\n  scale_x_continuous(name = 'Time through season (days)', breaks = seq(from = 0, to = 120, by = 20))+\n  scale_y_continuous(name = 'Goals scored minus total matchday xG', limits = c(-2, 2), \n                     breaks = seq(from = -2, to  = 2, by = 1))+\n  DomDF::theme_ddf_light(base_family = 'Atkinson Hyperlegible', base_size = 12)+\n  theme(legend.position = 'top', legend.title = element_text())+\n  labs(fill = 'Likelihood', shape ='')+\n  labs(subtitle = 'Ellen White (Manchester City), 2019-20 WSL Season', \n       caption = '@Domenic_DF  |  Data from StatsBomb')+\n  guides(fill = guide_colourbar(barwidth = 10, title.position = 'left', order = 1))\n\nEW_full_GP\n# grid::grid.raster(image = SB_logo, x = 1/8, y = 1/50, just = c('left', 'bottom'), width = unit(1, 'inches'))\n\n```\n\n### And, so what?\n\nSome squiggly lines that approximately go through some points? What is the value of this when you could scribble something similar without knowing anything about statistics?\n\nWell, underlying all of these lines is a model of dependency. We have quantified how similar (correlated) form should be in successive games, and how this correlation will decrease with time. I will talk about the parameters that do this and how they can be interpreted in part 2 (in preparation), but to summarise, the model quantifies how correlation in form decreases as time progresses and this can be seen in the smoothness of the lines. \n\nFor example, if form was always shown to be very similar to that of the previous game, then transitioning from good to bad performances would be gradual, and the samples from the associated GP model would be very smooth. Conversely, in the case where performance in subsequent games were completely independent, even if very little time had passed, the GP regression lines would need to be able to change direction very sharply.\n\nBelow are some predictions from the model in the period just after White's last game of the season (to the right of the final match day on the above plots). She appeared to be on a slight upward trend at this point, over performing in her final game at home to Chelsea. This is shown in the uppermost histogram. As we move away from this game, into the off-season, we see the uncertainty gradually increase in our predictions and the average move towards zero. This is consistent with the considerations discussed above.\n\n```{r}\n#| echo: false\n#| message: false\n#| warning: false\n\nEW_forecast <- ggplot(data = post_pred_GP_df |> \n                        mutate(delta_days = floor(days) - 119, \n                               delta_label = paste(delta_days, 'days after final league game')) |>\n                        dplyr::filter(delta_days == 0 | delta_days == 2 | delta_days == 4),\n       mapping = aes(x = value, y = after_stat(x = density)))+\n  geom_histogram(col = 'black', alpha = 1/4)+\n  facet_wrap(facets = ~delta_label, ncol = 1)+\n  geom_vline(xintercept = 0, lty = 2, alpha = 1/2)+\n  scale_x_continuous(name = 'Goals scored minus total matchday xG', limits = c(-5/2, 5/2))+\n  scale_y_continuous(name = 'Likelihood')+\n  DomDF::theme_ddf_light(base_family = 'Atkinson Hyperlegible', base_size = 12)+\n  labs(subtitle = 'Forecast Form of Ellen White', \n       caption = '@Domenic_DF  |  Data from StatsBomb')\n\nEW_forecast\n# grid::grid.raster(image = SB_logo, x = 1/8, y = 1/50, just = c('left', 'bottom'), width = unit(1, 'inches'))\n\n```\n\n### Some final thoughts...\n\n#### Uncertainty\n\nAny football models we propose will only vaguely resemble the 'true' data generating process and though we can incrementally add more parameters we do not automatically find more evidence for them. We can build big datasets by combining observations from multiple players, and leagues, but ignoring possible variation between such data is misleading. If your big football models need big data, why stop there? Feed it some Sunday league football, or some basketball, or some handwritten digits. \n\nAlternatively, we acknowledge that our system of parameters are not perfectly precise, and our predictions will span credible ranges. Quantifying this variability is a strength, not a weakness of our models, and is actually of more direct use in decision support.\n\n![Yes we can!](https://media.giphy.com/media/3otPoyudZ18xASX0rK/giphy.gif)\n\n#### Sources of Information\n\nWhat can we do about long periods in time where no competitive games are taking place?\n\nThere may be other sources of information that could help, such as performances in other competitions or even in training. Given we are not sure of the extent that these should inform the model, there is an argument to use a multi-level (partial pooling) structure, as was used to improve [player-specifc xG estimates](https://allyourbayes.com/posts/xg_pt2/).\n\nFinally, the other source of information is that contained in the priors, which I have not included here. But don't panic, some prior predictive sampling is on the way in part 2 (in preparation)."},"formats":{"html":{"identifier":{"display-name":"HTML","target-format":"html","base-format":"html"},"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":true,"echo":true,"output":true,"warning":true,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"engine":"knitr"},"render":{"keep-tex":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":"none","code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[],"notebook-links":true,"format-links":true},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","css":["../../styles.css"],"output-file":"index.html"},"language":{"toc-title-document":"Table of contents","toc-title-website":"On this page","related-formats-title":"Other Formats","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Source","section-title-abstract":"Abstract","section-title-appendices":"Appendices","section-title-footnotes":"Footnotes","section-title-references":"References","section-title-reuse":"Reuse","section-title-copyright":"Copyright","section-title-citation":"Citation","appendix-attribution-cite-as":"For attribution, please cite this work as:","appendix-attribution-bibtex":"BibTeX citation:","title-block-author-single":"Author","title-block-author-plural":"Authors","title-block-affiliation-single":"Affiliation","title-block-affiliation-plural":"Affiliations","title-block-published":"Published","title-block-modified":"Modified","callout-tip-title":"Tip","callout-note-title":"Note","callout-warning-title":"Warning","callout-important-title":"Important","callout-caution-title":"Caution","code-summary":"Code","code-tools-menu-caption":"Code","code-tools-show-all-code":"Show All Code","code-tools-hide-all-code":"Hide All Code","code-tools-view-source":"View Source","code-tools-source-code":"Source Code","code-line":"Line","code-lines":"Lines","copy-button-tooltip":"Copy to Clipboard","copy-button-tooltip-success":"Copied!","repo-action-links-edit":"Edit this page","repo-action-links-source":"View source","repo-action-links-issue":"Report an issue","back-to-top":"Back to top","search-no-results-text":"No results","search-matching-documents-text":"matching documents","search-copy-link-title":"Copy link to search","search-hide-matches-text":"Hide additional matches","search-more-match-text":"more match in this document","search-more-matches-text":"more matches in this document","search-clear-button-title":"Clear","search-detached-cancel-button-title":"Cancel","search-submit-button-title":"Submit","search-label":"Search","toggle-section":"Toggle section","toggle-sidebar":"Toggle sidebar navigation","toggle-dark-mode":"Toggle dark mode","toggle-reader-mode":"Toggle reader mode","toggle-navigation":"Toggle navigation","crossref-fig-title":"Figure","crossref-tbl-title":"Table","crossref-lst-title":"Listing","crossref-thm-title":"Theorem","crossref-lem-title":"Lemma","crossref-cor-title":"Corollary","crossref-prp-title":"Proposition","crossref-cnj-title":"Conjecture","crossref-def-title":"Definition","crossref-exm-title":"Example","crossref-exr-title":"Exercise","crossref-ch-prefix":"Chapter","crossref-apx-prefix":"Appendix","crossref-sec-prefix":"Section","crossref-eq-prefix":"Equation","crossref-lof-title":"List of Figures","crossref-lot-title":"List of Tables","crossref-lol-title":"List of Listings","environment-proof-title":"Proof","environment-remark-title":"Remark","environment-solution-title":"Solution","listing-page-order-by":"Order By","listing-page-order-by-default":"Default","listing-page-order-by-date-asc":"Oldest","listing-page-order-by-date-desc":"Newest","listing-page-order-by-number-desc":"High to Low","listing-page-order-by-number-asc":"Low to High","listing-page-field-date":"Date","listing-page-field-title":"Title","listing-page-field-description":"Description","listing-page-field-author":"Author","listing-page-field-filename":"File Name","listing-page-field-filemodified":"Modified","listing-page-field-subtitle":"Subtitle","listing-page-field-readingtime":"Reading Time","listing-page-field-categories":"Categories","listing-page-minutes-compact":"{0} min","listing-page-category-all":"All","listing-page-no-matches":"No matching items"},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.3.450","theme":{"light":"flatly","dark":"darkly"},"title-block-banner":true,"title":"Player Form. Part 1","subtitle":"An Overview","author":"Domenic Di Francesco","date":"2022-01-19","categories":["football","analysis","Stan","uncertainty","Bayes","gaussian process"],"image":"plot.png","citation":true},"extensions":{"book":{"multiFile":true}}}},"projectFormats":["html"]}